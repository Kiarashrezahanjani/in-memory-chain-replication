// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/Log.proto

package client;

public final class Log {
  private Log() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class LogEntry extends
      com.google.protobuf.GeneratedMessage {
    // Use LogEntry.newBuilder() to construct.
    private LogEntry() {
      initFields();
    }
    private LogEntry(boolean noInit) {}
    
    private static final LogEntry defaultInstance;
    public static LogEntry getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogEntry getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return client.Log.internal_static_serialization_LogEntry_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return client.Log.internal_static_serialization_LogEntry_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      CONNECTION_DB_CLIENT(0, 1),
      CONNECTION_BUFFER_SERVER(1, 2),
      ENTRY_PERSISTED(2, 3),
      TAIL_NOTIFICATION(3, 4),
      ACK(4, 5),
      CONNECTION_TAIL_TO_DB_CLIENT(5, 6),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 1: return CONNECTION_DB_CLIENT;
          case 2: return CONNECTION_BUFFER_SERVER;
          case 3: return ENTRY_PERSISTED;
          case 4: return TAIL_NOTIFICATION;
          case 5: return ACK;
          case 6: return CONNECTION_TAIL_TO_DB_CLIENT;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return client.Log.LogEntry.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        CONNECTION_DB_CLIENT, CONNECTION_BUFFER_SERVER, ENTRY_PERSISTED, TAIL_NOTIFICATION, ACK, CONNECTION_TAIL_TO_DB_CLIENT, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        client.Log.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:serialization.LogEntry.Type)
    }
    
    public static final class Identifier extends
        com.google.protobuf.GeneratedMessage {
      // Use Identifier.newBuilder() to construct.
      private Identifier() {
        initFields();
      }
      private Identifier(boolean noInit) {}
      
      private static final Identifier defaultInstance;
      public static Identifier getDefaultInstance() {
        return defaultInstance;
      }
      
      public Identifier getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return client.Log.internal_static_serialization_LogEntry_Identifier_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return client.Log.internal_static_serialization_LogEntry_Identifier_fieldAccessorTable;
      }
      
      // required string clientId = 1;
      public static final int CLIENTID_FIELD_NUMBER = 1;
      private boolean hasClientId;
      private java.lang.String clientId_ = "";
      public boolean hasClientId() { return hasClientId; }
      public java.lang.String getClientId() { return clientId_; }
      
      // optional int64 messageId = 2;
      public static final int MESSAGEID_FIELD_NUMBER = 2;
      private boolean hasMessageId;
      private long messageId_ = 0L;
      public boolean hasMessageId() { return hasMessageId; }
      public long getMessageId() { return messageId_; }
      
      private void initFields() {
      }
      public final boolean isInitialized() {
        if (!hasClientId) return false;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (hasClientId()) {
          output.writeString(1, getClientId());
        }
        if (hasMessageId()) {
          output.writeInt64(2, getMessageId());
        }
        getUnknownFields().writeTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (hasClientId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeStringSize(1, getClientId());
        }
        if (hasMessageId()) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, getMessageId());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }
      
      public static client.Log.LogEntry.Identifier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static client.Log.LogEntry.Identifier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static client.Log.LogEntry.Identifier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static client.Log.LogEntry.Identifier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(client.Log.LogEntry.Identifier prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private client.Log.LogEntry.Identifier result;
        
        // Construct using client.Log.LogEntry.Identifier.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new client.Log.LogEntry.Identifier();
          return builder;
        }
        
        protected client.Log.LogEntry.Identifier internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new client.Log.LogEntry.Identifier();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return client.Log.LogEntry.Identifier.getDescriptor();
        }
        
        public client.Log.LogEntry.Identifier getDefaultInstanceForType() {
          return client.Log.LogEntry.Identifier.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public client.Log.LogEntry.Identifier build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private client.Log.LogEntry.Identifier buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public client.Log.LogEntry.Identifier buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          client.Log.LogEntry.Identifier returnMe = result;
          result = null;
          return returnMe;
        }
        
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof client.Log.LogEntry.Identifier) {
            return mergeFrom((client.Log.LogEntry.Identifier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }
        
        public Builder mergeFrom(client.Log.LogEntry.Identifier other) {
          if (other == client.Log.LogEntry.Identifier.getDefaultInstance()) return this;
          if (other.hasClientId()) {
            setClientId(other.getClientId());
          }
          if (other.hasMessageId()) {
            setMessageId(other.getMessageId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(
              this.getUnknownFields());
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                this.setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  this.setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 10: {
                setClientId(input.readString());
                break;
              }
              case 16: {
                setMessageId(input.readInt64());
                break;
              }
            }
          }
        }
        
        
        // required string clientId = 1;
        public boolean hasClientId() {
          return result.hasClientId();
        }
        public java.lang.String getClientId() {
          return result.getClientId();
        }
        public Builder setClientId(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientId = true;
          result.clientId_ = value;
          return this;
        }
        public Builder clearClientId() {
          result.hasClientId = false;
          result.clientId_ = getDefaultInstance().getClientId();
          return this;
        }
        
        // optional int64 messageId = 2;
        public boolean hasMessageId() {
          return result.hasMessageId();
        }
        public long getMessageId() {
          return result.getMessageId();
        }
        public Builder setMessageId(long value) {
          result.hasMessageId = true;
          result.messageId_ = value;
          return this;
        }
        public Builder clearMessageId() {
          result.hasMessageId = false;
          result.messageId_ = 0L;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:serialization.LogEntry.Identifier)
      }
      
      static {
        defaultInstance = new Identifier(true);
        client.Log.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:serialization.LogEntry.Identifier)
    }
    
    // optional .serialization.LogEntry.Identifier entryId = 1;
    public static final int ENTRYID_FIELD_NUMBER = 1;
    private boolean hasEntryId;
    private client.Log.LogEntry.Identifier entryId_;
    public boolean hasEntryId() { return hasEntryId; }
    public client.Log.LogEntry.Identifier getEntryId() { return entryId_; }
    
    // optional string key = 2;
    public static final int KEY_FIELD_NUMBER = 2;
    private boolean hasKey;
    private java.lang.String key_ = "";
    public boolean hasKey() { return hasKey; }
    public java.lang.String getKey() { return key_; }
    
    // optional string operation = 3;
    public static final int OPERATION_FIELD_NUMBER = 3;
    private boolean hasOperation;
    private java.lang.String operation_ = "";
    public boolean hasOperation() { return hasOperation; }
    public java.lang.String getOperation() { return operation_; }
    
    // optional string clientSocketAddress = 4;
    public static final int CLIENTSOCKETADDRESS_FIELD_NUMBER = 4;
    private boolean hasClientSocketAddress;
    private java.lang.String clientSocketAddress_ = "";
    public boolean hasClientSocketAddress() { return hasClientSocketAddress; }
    public java.lang.String getClientSocketAddress() { return clientSocketAddress_; }
    
    // optional .serialization.LogEntry.Type messageType = 5;
    public static final int MESSAGETYPE_FIELD_NUMBER = 5;
    private boolean hasMessageType;
    private client.Log.LogEntry.Type messageType_;
    public boolean hasMessageType() { return hasMessageType; }
    public client.Log.LogEntry.Type getMessageType() { return messageType_; }
    
    private void initFields() {
      entryId_ = client.Log.LogEntry.Identifier.getDefaultInstance();
      messageType_ = client.Log.LogEntry.Type.CONNECTION_DB_CLIENT;
    }
    public final boolean isInitialized() {
      if (hasEntryId()) {
        if (!getEntryId().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEntryId()) {
        output.writeMessage(1, getEntryId());
      }
      if (hasKey()) {
        output.writeString(2, getKey());
      }
      if (hasOperation()) {
        output.writeString(3, getOperation());
      }
      if (hasClientSocketAddress()) {
        output.writeString(4, getClientSocketAddress());
      }
      if (hasMessageType()) {
        output.writeEnum(5, getMessageType().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEntryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntryId());
      }
      if (hasKey()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getKey());
      }
      if (hasOperation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getOperation());
      }
      if (hasClientSocketAddress()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getClientSocketAddress());
      }
      if (hasMessageType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, getMessageType().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static client.Log.LogEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static client.Log.LogEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static client.Log.LogEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static client.Log.LogEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static client.Log.LogEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static client.Log.LogEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static client.Log.LogEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static client.Log.LogEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static client.Log.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static client.Log.LogEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(client.Log.LogEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private client.Log.LogEntry result;
      
      // Construct using client.Log.LogEntry.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new client.Log.LogEntry();
        return builder;
      }
      
      protected client.Log.LogEntry internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new client.Log.LogEntry();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return client.Log.LogEntry.getDescriptor();
      }
      
      public client.Log.LogEntry getDefaultInstanceForType() {
        return client.Log.LogEntry.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public client.Log.LogEntry build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private client.Log.LogEntry buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public client.Log.LogEntry buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        client.Log.LogEntry returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof client.Log.LogEntry) {
          return mergeFrom((client.Log.LogEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(client.Log.LogEntry other) {
        if (other == client.Log.LogEntry.getDefaultInstance()) return this;
        if (other.hasEntryId()) {
          mergeEntryId(other.getEntryId());
        }
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasOperation()) {
          setOperation(other.getOperation());
        }
        if (other.hasClientSocketAddress()) {
          setClientSocketAddress(other.getClientSocketAddress());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              client.Log.LogEntry.Identifier.Builder subBuilder = client.Log.LogEntry.Identifier.newBuilder();
              if (hasEntryId()) {
                subBuilder.mergeFrom(getEntryId());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEntryId(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setKey(input.readString());
              break;
            }
            case 26: {
              setOperation(input.readString());
              break;
            }
            case 34: {
              setClientSocketAddress(input.readString());
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              client.Log.LogEntry.Type value = client.Log.LogEntry.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                setMessageType(value);
              }
              break;
            }
          }
        }
      }
      
      
      // optional .serialization.LogEntry.Identifier entryId = 1;
      public boolean hasEntryId() {
        return result.hasEntryId();
      }
      public client.Log.LogEntry.Identifier getEntryId() {
        return result.getEntryId();
      }
      public Builder setEntryId(client.Log.LogEntry.Identifier value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEntryId = true;
        result.entryId_ = value;
        return this;
      }
      public Builder setEntryId(client.Log.LogEntry.Identifier.Builder builderForValue) {
        result.hasEntryId = true;
        result.entryId_ = builderForValue.build();
        return this;
      }
      public Builder mergeEntryId(client.Log.LogEntry.Identifier value) {
        if (result.hasEntryId() &&
            result.entryId_ != client.Log.LogEntry.Identifier.getDefaultInstance()) {
          result.entryId_ =
            client.Log.LogEntry.Identifier.newBuilder(result.entryId_).mergeFrom(value).buildPartial();
        } else {
          result.entryId_ = value;
        }
        result.hasEntryId = true;
        return this;
      }
      public Builder clearEntryId() {
        result.hasEntryId = false;
        result.entryId_ = client.Log.LogEntry.Identifier.getDefaultInstance();
        return this;
      }
      
      // optional string key = 2;
      public boolean hasKey() {
        return result.hasKey();
      }
      public java.lang.String getKey() {
        return result.getKey();
      }
      public Builder setKey(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder clearKey() {
        result.hasKey = false;
        result.key_ = getDefaultInstance().getKey();
        return this;
      }
      
      // optional string operation = 3;
      public boolean hasOperation() {
        return result.hasOperation();
      }
      public java.lang.String getOperation() {
        return result.getOperation();
      }
      public Builder setOperation(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder clearOperation() {
        result.hasOperation = false;
        result.operation_ = getDefaultInstance().getOperation();
        return this;
      }
      
      // optional string clientSocketAddress = 4;
      public boolean hasClientSocketAddress() {
        return result.hasClientSocketAddress();
      }
      public java.lang.String getClientSocketAddress() {
        return result.getClientSocketAddress();
      }
      public Builder setClientSocketAddress(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasClientSocketAddress = true;
        result.clientSocketAddress_ = value;
        return this;
      }
      public Builder clearClientSocketAddress() {
        result.hasClientSocketAddress = false;
        result.clientSocketAddress_ = getDefaultInstance().getClientSocketAddress();
        return this;
      }
      
      // optional .serialization.LogEntry.Type messageType = 5;
      public boolean hasMessageType() {
        return result.hasMessageType();
      }
      public client.Log.LogEntry.Type getMessageType() {
        return result.getMessageType();
      }
      public Builder setMessageType(client.Log.LogEntry.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder clearMessageType() {
        result.hasMessageType = false;
        result.messageType_ = client.Log.LogEntry.Type.CONNECTION_DB_CLIENT;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:serialization.LogEntry)
    }
    
    static {
      defaultInstance = new LogEntry(true);
      client.Log.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:serialization.LogEntry)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_serialization_LogEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serialization_LogEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_serialization_LogEntry_Identifier_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_serialization_LogEntry_Identifier_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017proto/Log.proto\022\rserialization\"\372\002\n\010Log" +
      "Entry\0223\n\007entryId\030\001 \001(\0132\".serialization.L" +
      "ogEntry.Identifier\022\013\n\003key\030\002 \001(\t\022\021\n\topera" +
      "tion\030\003 \001(\t\022\033\n\023clientSocketAddress\030\004 \001(\t\022" +
      "1\n\013messageType\030\005 \001(\0162\034.serialization.Log" +
      "Entry.Type\0321\n\nIdentifier\022\020\n\010clientId\030\001 \002" +
      "(\t\022\021\n\tmessageId\030\002 \001(\003\"\225\001\n\004Type\022\030\n\024CONNEC" +
      "TION_DB_CLIENT\020\001\022\034\n\030CONNECTION_BUFFER_SE" +
      "RVER\020\002\022\023\n\017ENTRY_PERSISTED\020\003\022\025\n\021TAIL_NOTI" +
      "FICATION\020\004\022\007\n\003ACK\020\005\022 \n\034CONNECTION_TAIL_T",
      "O_DB_CLIENT\020\006B\r\n\006clientB\003Log"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_serialization_LogEntry_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_serialization_LogEntry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_serialization_LogEntry_descriptor,
              new java.lang.String[] { "EntryId", "Key", "Operation", "ClientSocketAddress", "MessageType", },
              client.Log.LogEntry.class,
              client.Log.LogEntry.Builder.class);
          internal_static_serialization_LogEntry_Identifier_descriptor =
            internal_static_serialization_LogEntry_descriptor.getNestedTypes().get(0);
          internal_static_serialization_LogEntry_Identifier_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_serialization_LogEntry_Identifier_descriptor,
              new java.lang.String[] { "ClientId", "MessageId", },
              client.Log.LogEntry.Identifier.class,
              client.Log.LogEntry.Identifier.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
